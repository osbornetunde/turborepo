"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.autoFullBuild = void 0;
const vite_1 = require("vite");
const utils_1 = require("../utils");
const runPrerender_1 = require("../../prerender/runPrerender");
const getConfigVps_1 = require("../../shared/getConfigVps");
const isViteCliCall_1 = require("../shared/isViteCliCall");
let forceExit = false;
function autoFullBuild() {
    let config;
    let configVps;
    return [
        {
            name: 'vite-plugin-ssr:autoFullBuild',
            apply: 'build',
            enforce: 'pre',
            async configResolved(config_) {
                configVps = await (0, getConfigVps_1.getConfigVps)(config_);
                config = config_;
                abortSSRBuild(configVps);
            },
            writeBundle: {
                /* We can't use this because it breaks Vite's logging. TODO: try again with latest Vite version.
                sequential: true,
                order: 'pre',
                */
                async handler(_options, bundle) {
                    try {
                        await triggerFullBuild(config, configVps, bundle);
                    }
                    catch (err) {
                        // Avoid Rollup prefixing the error with `[vite-plugin-ssr:autoFullBuild]`, for example see https://github.com/brillout/vite-plugin-ssr/issues/472#issuecomment-1276274203
                        console.error(err);
                        process.exit(1);
                    }
                }
            }
        },
        {
            name: 'vite-plugin-ssr:autoFullBuild:forceExit',
            apply: 'build',
            enforce: 'post',
            closeBundle: {
                sequential: true,
                order: 'post',
                handler() {
                    if (forceExit) {
                        (0, runPrerender_1.runPrerenderForceExit)();
                    }
                }
            }
        }
    ];
}
exports.autoFullBuild = autoFullBuild;
async function triggerFullBuild(config, configVps, bundle) {
    if (config.build.ssr ||
        configVps.disableAutoFullBuild ||
        !(0, isViteCliCall_1.isViteCliCall)() ||
        // `vite-plugin-ssr.json` missing => it isn't a `$ vite build` call (e.g. @vitejs/plugin-legacy calls Vite's `build()`) => skip
        !bundle['vite-plugin-ssr.json']) {
        return;
    }
    const configFromCli = (0, isViteCliCall_1.getViteBuildCliConfig)();
    if (!configFromCli.configFile) {
        configFromCli.configFile = config.configFile;
    }
    if (!configFromCli.root) {
        configFromCli.root = config.root;
    }
    await (0, vite_1.build)({
        ...configFromCli,
        build: {
            ...configFromCli.build,
            ssr: true
        }
    });
    if (configVps.prerender && !configVps.prerender.disableAutoRun) {
        await (0, runPrerender_1.runPrerender)({ viteConfig: configFromCli }, null);
        forceExit = true;
    }
}
function abortSSRBuild(configVps) {
    if (!configVps.disableAutoFullBuild && (0, isViteCliCall_1.isViteCliCall)() && (0, isViteCliCall_1.getViteBuildCliConfig)().build.ssr) {
        (0, utils_1.assertWarning)(false, "The CLI call `$ vite build --ssr` is superfluous since `$ vite build` also builds the server-side. If you want two separate build steps then use https://vite-plugin-ssr.com/disableAutoFullBuild or use Vite's `build()` API.", { showStackTrace: false, onlyOnce: true });
        process.exit(0);
    }
}
