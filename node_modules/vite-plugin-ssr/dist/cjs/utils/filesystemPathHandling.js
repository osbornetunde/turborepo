"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isPosixPath = exports.toSystemPath = exports.assertPosixPath = exports.toPosixPath = void 0;
const assert_1 = require("./assert");
const sepPosix = '/';
const sepWin32 = '\\';
function isPosixPath(path) {
    return !path.includes(sepWin32);
}
exports.isPosixPath = isPosixPath;
function toPosixPath(path) {
    const pathPosix = path.split(sepWin32).join(sepPosix);
    assertPosixPath(pathPosix);
    return pathPosix;
}
exports.toPosixPath = toPosixPath;
function assertPosixPath(path) {
    const errMsg = (msg) => `Not a posix path: ${msg}`;
    (0, assert_1.assert)(path !== null, errMsg('null'));
    (0, assert_1.assert)(typeof path === 'string', errMsg(`typeof path === '${typeof path}'`));
    (0, assert_1.assert)(path !== '', errMsg('(empty string)'));
    (0, assert_1.assert)(path);
    (0, assert_1.assert)(!path.includes(sepWin32), errMsg(path));
}
exports.assertPosixPath = assertPosixPath;
function toSystemPath(path) {
    if (isPosixEnv()) {
        return toPosixPath(path);
    }
    if (isWin32Env()) {
        return path.split(sepPosix).join(sepWin32);
    }
    (0, assert_1.assert)(false);
}
exports.toSystemPath = toSystemPath;
function isWin32Env() {
    return process.platform === 'win32';
}
function isPosixEnv() {
    return !isWin32Env();
}
