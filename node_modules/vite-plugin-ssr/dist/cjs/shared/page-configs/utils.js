"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPageConfig = exports.getCodeFilePath = exports.getConfigValue = void 0;
const utils_1 = require("../utils");
// function getConfigValue(pageConfig: PageConfigData, configName: ConfigNameBuiltIn): unknown
function getConfigValue(pageConfig, configName, type) {
    const configElement = pageConfig.configElements[configName];
    if (!configElement || isNullish(pageConfig, configName)) {
        return null;
    }
    const { configValue, configDefinedAt } = configElement;
    (0, utils_1.assertUsage)(typeof configValue === type, `${configDefinedAt} has an invalid type \`${typeof configValue}\`: is should be a ${type} instead`);
    return configValue;
}
exports.getConfigValue = getConfigValue;
function getCodeFilePath(pageConfig, configName) {
    const configElement = pageConfig.configElements[configName];
    if (!configElement || isNullish(pageConfig, configName)) {
        return null;
    }
    if (configElement.codeFilePath !== null) {
        return configElement.codeFilePath;
    }
    const { configValue, configDefinedAt } = configElement;
    (0, utils_1.assertUsage)(typeof configValue === 'string', `${configDefinedAt} has an invalid type \`${typeof configValue}\`: it should be a \`string\` instead`);
    (0, utils_1.assertUsage)(false, `${configDefinedAt} has an invalid value \`${configValue}\`: it should be a file path instead`);
}
exports.getCodeFilePath = getCodeFilePath;
function isNullish(pageConfig, configName) {
    const configElement = pageConfig.configElements[configName];
    if (!configElement)
        return true;
    const { codeFilePath, configValue } = configElement;
    if (codeFilePath)
        return false;
    return configValue === null || configValue === undefined;
}
function getPageConfig(pageId, pageConfigs) {
    const pageConfig = pageConfigs.find((p) => p.pageId === pageId);
    (0, utils_1.assert)(pageConfigs.length > 0);
    (0, utils_1.assert)(pageConfig);
    return pageConfig;
}
exports.getPageConfig = getPageConfig;
