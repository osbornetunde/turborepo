"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertRenderErrorPageExceptionUsage = exports.RenderErrorPage = exports.isRenderErrorPageException = void 0;
const assertPageContextProvidedByUser_1 = require("../assertPageContextProvidedByUser");
const utils_1 = require("./utils");
const stamp = '__isRenderErrorPageException';
function isRenderErrorPageException(thing) {
    assertRenderErrorPageExceptionUsage(thing);
    return typeof thing === 'object' && thing !== null && stamp in thing;
}
exports.isRenderErrorPageException = isRenderErrorPageException;
function RenderErrorPage({ pageContext } = {}) {
    {
        // @ts-ignore
        const that = this;
        (0, utils_1.assertUsage)(!(typeof that === 'object' && that?.constructor === RenderErrorPage), "Don't use the `new` operator: use `throw RenderErrorPage()` instead of `throw new RenderErrorPage()`.");
    }
    (0, assertPageContextProvidedByUser_1.assertPageContextProvidedByUser)(pageContext, {
        errorMessagePrefix: 'The `pageContext` object provided by `throw RenderErrorPage({ pageContext })`',
        isRenderErrorPage: true
    });
    const err = new Error('RenderErrorPage');
    (0, utils_1.objectAssign)(err, { pageContext, [stamp]: true });
    return err;
}
exports.RenderErrorPage = RenderErrorPage;
function assertRenderErrorPageExceptionUsage(err) {
    (0, utils_1.assertUsage)(err !== RenderErrorPage, 'Missing parentheses `()` in `throw RenderErrorPage`: it should be `throw RenderErrorPage()`.');
}
exports.assertRenderErrorPageExceptionUsage = assertRenderErrorPageExceptionUsage;
