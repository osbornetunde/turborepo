export { initGlobalContext };
export { getGlobalContext };
export { setGlobalContextViteDevServer };
export { setGlobalContextViteConfig };
export { getRuntimeManifest };
import type { ViteManifest } from '../shared/ViteManifest';
import type { ResolvedConfig, ViteDevServer } from 'vite';
import { PluginManifest } from '../shared/assertPluginManifest';
import type { ConfigVpsResolved } from '../../shared/ConfigVps';
import { type RuntimeManifest } from '../shared/assertRuntimeManifest';
type GlobalContext = ({
    isProduction: false;
    isPrerendering: false;
    viteDevServer: ViteDevServer;
    config: ResolvedConfig;
    configVps: ConfigVpsResolved;
    clientManifest: null;
    pluginManifest: null;
} | {
    isProduction: true;
    isPrerendering: boolean;
    clientManifest: ViteManifest;
    pluginManifest: PluginManifest;
    config: null;
    configVps: null;
    viteDevServer: null;
}) & {
    baseServer: string;
    baseAssets: null | string;
    includeAssetsImportedByServer: boolean;
};
declare function getGlobalContext(): GlobalContext;
declare function setGlobalContextViteDevServer(viteDevServer: ViteDevServer): void;
declare function setGlobalContextViteConfig(config: ResolvedConfig): void;
declare function initGlobalContext({ isPrerendering }?: {
    isPrerendering?: true;
}): Promise<void>;
declare function getRuntimeManifest(configVps: ConfigVpsResolved): RuntimeManifest;
