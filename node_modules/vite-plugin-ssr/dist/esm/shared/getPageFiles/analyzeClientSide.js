export { analyzeClientSide };
import { getCodeFilePath, getConfigValue } from '../page-configs/utils';
import { analyzePageClientSide } from './analyzePageClientSide';
function analyzeClientSide(pageConfig, pageFilesAll, pageId) {
    var _a;
    if (pageConfig) {
        const isClientRouting = (_a = getConfigValue(pageConfig, 'clientRouting', 'boolean')) !== null && _a !== void 0 ? _a : false;
        const onRenderClientExists = !!getCodeFilePath(pageConfig, 'onRenderClient');
        const PageExists = !!getCodeFilePath(pageConfig, 'Page') && pageConfig.configElements.Page.configEnv !== 'server-only';
        const isClientSideRenderable = onRenderClientExists && PageExists;
        return { isClientSideRenderable, isClientRouting };
    }
    else {
        // TOOD: globally rename isHtmlOnly to !isClientSideRenderable
        const { isHtmlOnly, isClientRouting } = analyzePageClientSide(pageFilesAll, pageId);
        return { isClientSideRenderable: !isHtmlOnly, isClientRouting };
    }
}
