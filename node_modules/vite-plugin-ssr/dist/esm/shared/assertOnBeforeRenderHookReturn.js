export { assertOnBeforeRenderHookReturn };
import { assertUsage, isPlainObject } from './utils';
import { assertPageContextProvidedByUser } from './assertPageContextProvidedByUser';
import { assertObjectKeys } from './assertObjectKeys';
function assertOnBeforeRenderHookReturn(hookReturnValue, hookFilePath) {
    if (hookReturnValue === undefined || hookReturnValue === null) {
        return;
    }
    const errPrefix = `The onBeforeRender() hook defined by ${hookFilePath}`;
    assertUsage(isPlainObject(hookReturnValue), `${errPrefix} should return a plain JavaScript object or \`undefined\`/\`null\``);
    assertObjectKeys(hookReturnValue, ['pageContext'], errPrefix);
    if (hookReturnValue.pageContext) {
        assertPageContextProvidedByUser(hookReturnValue['pageContext'], {
            hook: { hookName: 'onBeforeRender', hookFilePath }
        });
    }
}
