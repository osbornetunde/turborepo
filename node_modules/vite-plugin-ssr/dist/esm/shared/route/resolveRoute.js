export { resolveRoute };
import { assertUsage } from './utils';
import { resolveRouteString } from './resolveRouteString';
function resolveRoute(routeString, urlPathname) {
    var _a;
    const errMsg = (propName, msg = 'a non-empty string') => `[resolveRoute(routeString, urlPathname)] \`${propName}\` should be ` + msg;
    assertUsage(routeString, errMsg('routeString'));
    assertUsage(urlPathname, errMsg('urlPathname'));
    assertUsage(urlPathname.startsWith('/'), errMsg('urlPathname', '`pageContext.urlPathname`'));
    const result = resolveRouteString(routeString, urlPathname);
    return {
        match: !!result,
        routeParams: (_a = result === null || result === void 0 ? void 0 : result.routeParams) !== null && _a !== void 0 ? _a : {}
    };
}
