export { createPageContext };
import { addComputedUrlProps } from '../../shared/addComputedUrlProps';
import { getPageFilesAll } from '../../shared/getPageFiles';
import { getBaseServer } from '../getBaseServer';
import { assert, isBaseServer, objectAssign, getGlobalObject } from './utils';
const globalObject = getGlobalObject('createPageContext.ts', {});
async function createPageContext(pageContextBase) {
    if (!globalObject.pageFilesData) {
        globalObject.pageFilesData = await getPageFilesAll(true);
    }
    const { pageFilesAll, allPageIds, pageConfigs, pageConfigGlobal } = globalObject.pageFilesData;
    const baseServer = getBaseServer();
    assert(isBaseServer(baseServer));
    const pageContext = {
        _objectCreatedByVitePluginSsr: true,
        _urlHandler: null,
        _baseServer: baseServer,
        _isProduction: import.meta.env.PROD,
        // TODO: use GlobalContext instead
        _pageFilesAll: pageFilesAll,
        _pageConfigs: pageConfigs,
        _pageConfigGlobal: pageConfigGlobal,
        _allPageIds: allPageIds
    };
    objectAssign(pageContext, pageContextBase);
    addComputedUrlProps(pageContext);
    return pageContext;
}
